syntax = "proto3";

package messages;

// --- Sensor Status Messages (from sensor_status.rs) ---

// EkfStatus
enum EkfSolutionMode {
  EKF_SOLUTION_MODE_UNSPECIFIED = 0;
  UNINITIALIZED = 1;
  VERTICAL_GYRO = 2;
  AHRS = 3;
  NAV_VELOCITY = 4;
  NAV_POSITION = 5;
}

message EkfStatus {
  EkfSolutionMode solution_mode = 1;
  bool attitude_valid = 2;
  bool heading_valid = 3;
  bool velocity_valid = 4;
  bool position_valid = 5;
  bool vert_ref_used = 6;
  bool mag_ref_used = 7;
  bool gps1_vel_used = 8;
  bool gps1_pos_used = 9;
  bool gps1_hdt_used = 10;
  bool gps2_vel_used = 11;
  bool gps2_pos_used = 12;
  bool gps2_hdt_used = 13;
  bool odo_used = 14;
  bool dvl_bt_used = 15;
  bool dvl_wt_used = 16;
  bool user_pos_used = 17;
  bool user_vel_used = 18;
  bool user_heading_used = 19;
  bool usbl_used = 20;
  bool air_data_used = 21;
  bool zupt_used = 22;
  bool align_valid = 23;
  bool depth_used = 24;
}

// UtcTimeStatus
enum ClockStatus {
  CLOCK_STATUS_UNSPECIFIED = 0;
  CLOCK_ERROR = 1;
  FREE_RUNNING = 2;
  STEERING = 3;
  CLOCK_VALID = 4;
}

enum UtcStatus {
  UTC_STATUS_UNSPECIFIED = 0;
  UTC_INVALID = 1;
  NO_LEAP_SEC = 2;
  UTC_VALID = 3;
}

message UtcTimeStatus {
  ClockStatus clock_status = 1;
  UtcStatus utc_status = 2;
}

// AirStatus
message AirStatus {
  bool time_is_delay = 1;
  bool pressure_abs_valid = 2;
  bool altitude_valid = 3;
  bool pressure_diff_valid = 4;
  bool airspeed_valid = 5;
  bool temperature_valid = 6;
}

// ImuStatus
message ImuStatus {
  bool com_ok = 1;
  bool status_test_pass = 2;
  bool accel_x_test_pass = 3;
  bool accel_y_test_pass = 4;
  bool accel_z_test_pass = 5;
  bool gyro_x_test_pass = 6;
  bool gyro_y_test_pass = 7;
  bool gyro_z_test_pass = 8;
  bool accels_in_range = 9;
  bool gyros_in_range = 10;
}

// GpsPositionStatus
enum GpsPositionStatusE {
  GPS_POSITION_STATUS_E_UNSPECIFIED = 0;
  SOL_COMPUTED = 1;
  INSUFFICIENT_OBS = 2;
  GPS_INTERNAL_ERROR = 3;
  HEIGHT_LIMIT = 4;
}

enum GpsPositionType {
  GPS_POSITION_TYPE_UNSPECIFIED = 0;
  NO_SOLUTION = 1;
  UNKNOWN_TYPE = 2;
  SINGLE = 3;
  PSEUDO_RANGE_DIFF = 4;
  SBAS = 5;
  OMNI_STAR = 6;
  RTK_FLOAT = 7;
  RTK_INT = 8;
  PPP_FLOAT = 9;
  PPP_INT = 10;
  FIXED = 11;
}

message GpsPositionStatus {
    GpsPositionStatusE status = 1;
    GpsPositionType type = 2;
}

// GpsVelStatus
enum GpsVelStatusE {
  GPS_VEL_STATUS_E_UNSPECIFIED = 0;
  VEL_SOL_COMPUTED = 1;
  VEL_INSUFFICIENT_OBS = 2;
  VEL_INTERNAL_ERROR = 3;
  VEL_LIMIT = 4;
}

enum GpsVelType {
  GPS_VEL_TYPE_UNSPECIFIED = 0;
  VEL_NO_SOLUTION = 1;
  VEL_UNKNOWN_TYPE = 2;
  DOPPLER = 3;
  DIFFERENTIAL = 4;
}

message GpsVelStatus {
    GpsVelStatusE status = 1;
    GpsVelType type = 2;
}


// --- Sensor Data Messages (from sensor.rs) ---

message GpsPos {
    optional double latitude = 1;
    optional double longitude = 2;
    optional uint32 time_of_week = 3;
    optional float undulation = 4;
    optional double altitude = 5;
    uint32 time_stamp = 6;
    GpsPositionStatus status = 7;
    optional float latitude_accuracy = 8;
    optional float longitude_accuracy = 9;
    optional float altitude_accuracy = 10;
    optional uint32 num_sv_used = 11;
    optional uint32 base_station_id = 12;
    optional uint32 differential_age = 13;
}

message UtcTime {
    uint32 time_stamp = 1;
    UtcTimeStatus status = 2;
    optional uint32 year = 3;
    optional int32 month = 4;
    optional int32 day = 5;
    optional int32 hour = 6;
    optional int32 minute = 7;
    optional int32 second = 8;
    optional int32 nano_second = 9;
    optional uint32 gps_time_of_week = 10;
}

message Air {
    uint32 time_stamp = 1;
    AirStatus status = 2;
    optional float pressure_abs = 3;
    optional float altitude = 4;
    optional float pressure_diff = 5;
    optional float true_airspeed = 6;
    optional float air_temperature = 7;
}

message EkfQuat {
    uint32 time_stamp = 1;
    EkfStatus status = 2;
    repeated float quaternion = 3;
    repeated float euler_std_dev = 4;
}

message EkfNav {
    uint32 time_stamp = 1;
    EkfStatus status = 2;
    repeated float velocity = 3;
    repeated double position = 4;
    repeated float velocity_std_dev = 5;
    repeated float position_std_dev = 6;
}

message Imu {
    uint32 time_stamp = 1;
    ImuStatus status = 2;
    repeated float accelerometers = 3;
    repeated float gyroscopes = 4;
    optional float temperature = 5;
    repeated float delta_velocity = 6;
    repeated float delta_angle = 7;
}

message GpsVel {
    uint32 time_stamp = 1;
    GpsVelStatus status = 2;
    optional uint32 time_of_week = 3;
    repeated float velocity = 4;
    optional float heading = 5;
    optional float accuracy = 6;
    repeated float velocity_acc = 7;
    optional float heading_acc = 8;
}

message SbgData {
  oneof data {
    GpsPos gps_pos = 1;
    UtcTime utc_time = 2;
    Imu imu = 3;
    EkfQuat ekf_quat = 4;
    EkfNav ekf_nav = 5;
    GpsVel gps_vel = 6;
    Air air = 7;
  }
} 